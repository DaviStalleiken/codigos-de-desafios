<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.1 (Python 3.9.0 on win32)" generated="20210506 22:04:40.205" rpa="false" schemaversion="2">
<suite id="s1" name="Tests" source="c:\rw5\parodifood\tests">
<suite id="s1-s1" name="Busca" source="c:\rw5\parodifood\tests\busca.robot">
<test id="s1-s1-t1" name="Deve buscar um único restaurante">
<kw name="Start Session" library="base" type="SETUP">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210506 22:04:41.706" level="INFO">{"browser": "firefox", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210506 22:04:45.225" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210506 22:04:41.706" endtime="20210506 22:04:45.225"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodifood.qaninja.academy/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210506 22:04:55.896" level="INFO">Successfully initialized new page object and opened url: http://parodifood.qaninja.academy/</msg>
<status status="PASS" starttime="20210506 22:04:45.225" endtime="20210506 22:04:55.896"/>
</kw>
<kw name="Set Viewport Size" library="Browser">
<arg>1920</arg>
<arg>1080</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Sets current Pages viewport size to specified dimensions.</doc>
<msg timestamp="20210506 22:04:55.966" level="INFO">Set viewport size to: [object Object]</msg>
<status status="PASS" starttime="20210506 22:04:55.896" endtime="20210506 22:04:55.966"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=span</arg>
<arg>contains</arg>
<arg>Nunca foi tão engraçado pedir comida</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210506 22:04:55.967" endtime="20210506 22:04:56.086"/>
</kw>
<status status="PASS" starttime="20210506 22:04:41.706" endtime="20210506 22:04:56.086"/>
</kw>
<kw name="Go To Restaurants" library="search">
<kw name="Click" library="Browser">
<arg>text=Estou com fome!</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210506 22:04:56.086" endtime="20210506 22:04:56.246"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=h1 strong</arg>
<arg>contains</arg>
<arg>Ta na hora de matar a fome!</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210506 22:04:56.246" endtime="20210506 22:04:56.296"/>
</kw>
<status status="PASS" starttime="20210506 22:04:56.086" endtime="20210506 22:04:56.296"/>
</kw>
<kw name="Search By" library="search">
<arg>Debuger</arg>
<kw name="Click" library="Browser">
<arg>css=.search-link</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210506 22:04:56.296" endtime="20210506 22:04:56.360"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[formcontrolname="searchControl"]</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210506 22:04:56.360" level="INFO">Fills the text 'Debuger' in the given field.</msg>
<status status="PASS" starttime="20210506 22:04:56.360" endtime="20210506 22:04:56.431"/>
</kw>
<status status="PASS" starttime="20210506 22:04:56.296" endtime="20210506 22:04:56.431"/>
</kw>
<kw name="Restaurant Should Be Visible" library="search">
<arg>DEBUGER KING</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${DIV_BOX_RESTAURANT}</arg>
<arg>visible</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210506 22:04:57.463" level="INFO">Wait for Element with selector: css=div[class="place-info-box"][style="opacity: 1;"]</msg>
<status status="PASS" starttime="20210506 22:04:56.440" endtime="20210506 22:04:57.463"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>${DIV_BOX_RESTAURANT}</arg>
<arg>contains</arg>
<arg>${name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210506 22:04:57.463" endtime="20210506 22:04:57.505"/>
</kw>
<status status="PASS" starttime="20210506 22:04:56.440" endtime="20210506 22:04:57.505"/>
</kw>
<kw name="Restaurant Count Should Be" library="search">
<arg>1</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${DIV_BOX_RESTAURANT}</arg>
<arg>visible</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210506 22:04:57.546" level="INFO">Wait for Element with selector: css=div[class="place-info-box"][style="opacity: 1;"]</msg>
<status status="PASS" starttime="20210506 22:04:57.505" endtime="20210506 22:04:57.546"/>
</kw>
<kw name="Get Element Count" library="Browser">
<arg>${DIV_BOX_RESTAURANT}</arg>
<arg>equal</arg>
<arg>${qtd}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="PASS" starttime="20210506 22:04:57.546" endtime="20210506 22:04:57.556"/>
</kw>
<status status="PASS" starttime="20210506 22:04:57.505" endtime="20210506 22:04:57.564"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210506 22:04:57.706" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-1.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210506 22:04:57.564" endtime="20210506 22:04:57.706"/>
</kw>
<status status="PASS" starttime="20210506 22:04:41.706" endtime="20210506 22:04:57.706"/>
</test>
<test id="s1-s1-t2" name="Deve buscar por categoria">
<kw name="Start Session" library="base" type="SETUP">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210506 22:04:57.811" level="INFO">{"browser": "firefox", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210506 22:05:02.116" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210506 22:04:57.811" endtime="20210506 22:05:02.156"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodifood.qaninja.academy/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210506 22:05:11.161" level="INFO">Successfully initialized new page object and opened url: http://parodifood.qaninja.academy/</msg>
<status status="PASS" starttime="20210506 22:05:02.156" endtime="20210506 22:05:11.161"/>
</kw>
<kw name="Set Viewport Size" library="Browser">
<arg>1920</arg>
<arg>1080</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Sets current Pages viewport size to specified dimensions.</doc>
<msg timestamp="20210506 22:05:11.216" level="INFO">Set viewport size to: [object Object]</msg>
<status status="PASS" starttime="20210506 22:05:11.166" endtime="20210506 22:05:11.217"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=span</arg>
<arg>contains</arg>
<arg>Nunca foi tão engraçado pedir comida</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210506 22:05:11.217" endtime="20210506 22:05:11.315"/>
</kw>
<status status="PASS" starttime="20210506 22:04:57.811" endtime="20210506 22:05:11.315"/>
</kw>
<kw name="Go To Restaurants" library="search">
<kw name="Click" library="Browser">
<arg>text=Estou com fome!</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210506 22:05:11.325" endtime="20210506 22:05:11.446"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=h1 strong</arg>
<arg>contains</arg>
<arg>Ta na hora de matar a fome!</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210506 22:05:11.446" endtime="20210506 22:05:11.495"/>
</kw>
<status status="PASS" starttime="20210506 22:05:11.325" endtime="20210506 22:05:11.495"/>
</kw>
<kw name="Search By" library="search">
<arg>cafe</arg>
<kw name="Click" library="Browser">
<arg>css=.search-link</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210506 22:05:11.495" endtime="20210506 22:05:11.555"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[formcontrolname="searchControl"]</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210506 22:05:11.555" level="INFO">Fills the text 'cafe' in the given field.</msg>
<status status="PASS" starttime="20210506 22:05:11.555" endtime="20210506 22:05:11.620"/>
</kw>
<status status="PASS" starttime="20210506 22:05:11.495" endtime="20210506 22:05:11.620"/>
</kw>
<kw name="Restaurant Should Be Visible" library="search">
<arg>STARBUGS COFFEE</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${DIV_BOX_RESTAURANT}</arg>
<arg>visible</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210506 22:05:12.215" level="INFO">Wait for Element with selector: css=div[class="place-info-box"][style="opacity: 1;"]</msg>
<status status="PASS" starttime="20210506 22:05:11.625" endtime="20210506 22:05:12.215"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>${DIV_BOX_RESTAURANT}</arg>
<arg>contains</arg>
<arg>${name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210506 22:05:12.215" endtime="20210506 22:05:12.625"/>
</kw>
<status status="PASS" starttime="20210506 22:05:11.625" endtime="20210506 22:05:12.636"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210506 22:05:12.791" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-2.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210506 22:05:12.636" endtime="20210506 22:05:12.795"/>
</kw>
<status status="PASS" starttime="20210506 22:04:57.806" endtime="20210506 22:05:12.795"/>
</test>
<test id="s1-s1-t3" name="Deve buscar todos os restaurantes">
<kw name="Start Session" library="base" type="SETUP">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210506 22:05:12.886" level="INFO">{"browser": "firefox", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210506 22:05:17.225" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210506 22:05:12.886" endtime="20210506 22:05:17.225"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodifood.qaninja.academy/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210506 22:05:27.731" level="INFO">Successfully initialized new page object and opened url: http://parodifood.qaninja.academy/</msg>
<status status="PASS" starttime="20210506 22:05:17.225" endtime="20210506 22:05:27.731"/>
</kw>
<kw name="Set Viewport Size" library="Browser">
<arg>1920</arg>
<arg>1080</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Sets current Pages viewport size to specified dimensions.</doc>
<msg timestamp="20210506 22:05:27.778" level="INFO">Set viewport size to: [object Object]</msg>
<status status="PASS" starttime="20210506 22:05:27.731" endtime="20210506 22:05:27.778"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=span</arg>
<arg>contains</arg>
<arg>Nunca foi tão engraçado pedir comida</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210506 22:05:27.778" endtime="20210506 22:05:27.896"/>
</kw>
<status status="PASS" starttime="20210506 22:05:12.886" endtime="20210506 22:05:27.896"/>
</kw>
<kw name="Go To Restaurants" library="search">
<kw name="Click" library="Browser">
<arg>text=Estou com fome!</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210506 22:05:27.896" endtime="20210506 22:05:28.036"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=h1 strong</arg>
<arg>contains</arg>
<arg>Ta na hora de matar a fome!</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210506 22:05:28.036" endtime="20210506 22:05:28.086"/>
</kw>
<status status="PASS" starttime="20210506 22:05:27.896" endtime="20210506 22:05:28.086"/>
</kw>
<kw name="Search By" library="search">
<arg>a</arg>
<kw name="Click" library="Browser">
<arg>css=.search-link</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210506 22:05:28.096" endtime="20210506 22:05:28.181"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[formcontrolname="searchControl"]</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210506 22:05:28.181" level="INFO">Fills the text 'a' in the given field.</msg>
<status status="PASS" starttime="20210506 22:05:28.181" endtime="20210506 22:05:28.248"/>
</kw>
<status status="PASS" starttime="20210506 22:05:28.086" endtime="20210506 22:05:28.248"/>
</kw>
<kw name="Restaurant Count Should Be" library="search">
<arg>5</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>${DIV_BOX_RESTAURANT}</arg>
<arg>visible</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210506 22:05:28.825" level="INFO">Wait for Element with selector: css=div[class="place-info-box"][style="opacity: 1;"]</msg>
<status status="PASS" starttime="20210506 22:05:28.255" endtime="20210506 22:05:28.825"/>
</kw>
<kw name="Get Element Count" library="Browser">
<arg>${DIV_BOX_RESTAURANT}</arg>
<arg>equal</arg>
<arg>${qtd}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<status status="PASS" starttime="20210506 22:05:28.825" endtime="20210506 22:05:28.884"/>
</kw>
<status status="PASS" starttime="20210506 22:05:28.255" endtime="20210506 22:05:28.886"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210506 22:05:29.461" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-3.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210506 22:05:28.915" endtime="20210506 22:05:29.461"/>
</kw>
<status status="PASS" starttime="20210506 22:05:12.880" endtime="20210506 22:05:29.465"/>
</test>
<status status="PASS" starttime="20210506 22:04:40.246" endtime="20210506 22:05:29.565"/>
</suite>
<suite id="s1-s2" name="Carrinho" source="c:\rw5\parodifood\tests\carrinho.robot">
<test id="s1-s2-t1" name="Deve adicionar um item ao carrinho">
<kw name="Start Session" library="base" type="SETUP">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210506 22:05:29.641" level="INFO">{"browser": "firefox", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210506 22:05:36.275" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210506 22:05:29.641" endtime="20210506 22:05:36.275"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodifood.qaninja.academy/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210506 22:05:47.636" level="INFO">Successfully initialized new page object and opened url: http://parodifood.qaninja.academy/</msg>
<status status="PASS" starttime="20210506 22:05:36.275" endtime="20210506 22:05:47.636"/>
</kw>
<kw name="Set Viewport Size" library="Browser">
<arg>1920</arg>
<arg>1080</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Sets current Pages viewport size to specified dimensions.</doc>
<msg timestamp="20210506 22:05:47.667" level="INFO">Set viewport size to: [object Object]</msg>
<status status="PASS" starttime="20210506 22:05:47.636" endtime="20210506 22:05:47.667"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=span</arg>
<arg>contains</arg>
<arg>Nunca foi tão engraçado pedir comida</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210506 22:05:47.667" endtime="20210506 22:05:47.786"/>
</kw>
<status status="PASS" starttime="20210506 22:05:29.641" endtime="20210506 22:05:47.786"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{restaurant}</var>
<arg>restaurant=STARBUGS COFFEE</arg>
<arg>desc=Nada melhor que um café pra te ajudar a resolver um bug.</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210506 22:05:47.786" level="INFO">&amp;{restaurant} = { restaurant=STARBUGS COFFEE | desc=Nada melhor que um café pra te ajudar a resolver um bug. }</msg>
<status status="PASS" starttime="20210506 22:05:47.786" endtime="20210506 22:05:47.786"/>
</kw>
<kw name="Go To Restaurants" library="search">
<kw name="Click" library="Browser">
<arg>text=Estou com fome!</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210506 22:05:47.786" endtime="20210506 22:05:47.931"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=h1 strong</arg>
<arg>contains</arg>
<arg>Ta na hora de matar a fome!</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210506 22:05:47.931" endtime="20210506 22:05:47.986"/>
</kw>
<status status="PASS" starttime="20210506 22:05:47.786" endtime="20210506 22:05:47.986"/>
</kw>
<kw name="Choose Restaurant" library="search">
<arg>${restaurant}</arg>
<kw name="Click" library="Browser">
<arg>text=${super_var["restaurant"]}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210506 22:05:47.986" endtime="20210506 22:05:48.750"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=#detail</arg>
<arg>visible</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210506 22:05:48.776" level="INFO">Wait for Element with selector: css=#detail</msg>
<status status="PASS" starttime="20210506 22:05:48.750" endtime="20210506 22:05:48.776"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=#detail</arg>
<arg>contains</arg>
<arg>${super_var["desc"]}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210506 22:05:48.776" endtime="20210506 22:05:48.891"/>
</kw>
<status status="PASS" starttime="20210506 22:05:47.986" endtime="20210506 22:05:48.891"/>
</kw>
<kw name="Add To Cart" library="cart">
<arg>Starbugs 500 error</arg>
<kw name="Click" library="Browser">
<arg>xpath=//span[text()="${name}"]/..//a[@class="add-to-cart"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210506 22:05:48.896" endtime="20210506 22:05:49.386"/>
</kw>
<status status="PASS" starttime="20210506 22:05:48.896" endtime="20210506 22:05:49.386"/>
</kw>
<kw name="Should Add To Cart" library="cart">
<arg>Starbugs 500 error</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>css=#cart tr &gt;&gt; text=${name}</arg>
<arg>visible</arg>
<arg>${DEFAULT_TIMEOUT}</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210506 22:05:49.445" level="INFO">Wait for Element with selector: css=#cart tr &gt;&gt; text=Starbugs 500 error</msg>
<status status="PASS" starttime="20210506 22:05:49.391" endtime="20210506 22:05:49.445"/>
</kw>
<status status="PASS" starttime="20210506 22:05:49.391" endtime="20210506 22:05:49.445"/>
</kw>
<kw name="Total Cart Should Be" library="cart">
<arg>15,60</arg>
<kw name="Log" library="BuiltIn">
<arg>${total}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210506 22:05:49.445" level="INFO">15,60</msg>
<status status="PASS" starttime="20210506 22:05:49.445" endtime="20210506 22:05:49.445"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>xpath=//th[contains(text(),"Total")]/..//td</arg>
<arg>contains</arg>
<arg>${total}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210506 22:05:49.445" endtime="20210506 22:05:49.501"/>
</kw>
<status status="PASS" starttime="20210506 22:05:49.445" endtime="20210506 22:05:49.501"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210506 22:05:49.741" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-4.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210506 22:05:49.511" endtime="20210506 22:05:49.745"/>
</kw>
<status status="PASS" starttime="20210506 22:05:29.636" endtime="20210506 22:05:49.745"/>
</test>
<test id="s1-s2-t2" name="Deve adcionar 3 itens ao carrinho">
<kw name="Start Session" library="base" type="SETUP">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210506 22:05:49.870" level="INFO">{"browser": "firefox", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210506 22:06:00.836" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210506 22:05:49.865" endtime="20210506 22:06:00.836"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodifood.qaninja.academy/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210506 22:06:12.316" level="WARN">Keyword 'Take Screenshot' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20210506 22:06:12.331" level="FAIL">TimeoutError: page.goto: Timeout 10000ms exceeded.
=========================== logs ===========================
navigating to "http://parodifood.qaninja.academy/", waiting until "load"
============================================================
Note: use DEBUG=pw:api environment variable to capture Playwright logs.</msg>
<status status="FAIL" starttime="20210506 22:06:00.836" endtime="20210506 22:06:12.331"/>
</kw>
<kw name="Set Viewport Size" library="Browser">
<arg>1920</arg>
<arg>1080</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Sets current Pages viewport size to specified dimensions.</doc>
<status status="NOT RUN" starttime="20210506 22:06:12.331" endtime="20210506 22:06:12.331"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=span</arg>
<arg>contains</arg>
<arg>Nunca foi tão engraçado pedir comida</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="NOT RUN" starttime="20210506 22:06:12.331" endtime="20210506 22:06:12.336"/>
</kw>
<status status="FAIL" starttime="20210506 22:05:49.865" endtime="20210506 22:06:12.336"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210506 22:06:12.341" level="WARN">Keyword 'Take Screenshot' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20210506 22:06:12.346" level="FAIL">Error: Tried to take screenshot, but no page was open.</msg>
<status status="FAIL" starttime="20210506 22:06:12.336" endtime="20210506 22:06:12.346">Error: Tried to take screenshot, but no page was open.</status>
</kw>
<tag>temp</tag>
<status status="FAIL" starttime="20210506 22:05:49.860" endtime="20210506 22:06:12.346">Setup failed:
TimeoutError: page.goto: Timeout 10000ms exceeded.
=========================== logs ===========================
navigating to "http://parodifood.qaninja.academy/", waiting until "load"
============================================================
Note: use DEBUG=pw:api environment variable to capture Playwright logs.

Also teardown failed:
Error: Tried to take screenshot, but no page was open.</status>
</test>
<status status="FAIL" starttime="20210506 22:05:29.605" endtime="20210506 22:06:12.411"/>
</suite>
<suite id="s1-s3" name="Pedido" source="c:\rw5\parodifood\tests\pedido.robot">
<test id="s1-s3-t1" name="Deve Realizar Um Novo Pedido em Dinheiro">
<kw name="Start Session" library="base" type="SETUP">
<kw name="New Browser" library="Browser">
<arg>${browser}</arg>
<arg>${headless}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210506 22:06:12.450" level="INFO">{"browser": "firefox", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210506 22:06:25.436" level="INFO">Successfully created browser with options: {"browser":"firefox","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210506 22:06:12.450" endtime="20210506 22:06:25.436"/>
</kw>
<kw name="New Page" library="Browser">
<arg>http://parodifood.qaninja.academy/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210506 22:06:36.986" level="WARN">Keyword 'Take Screenshot' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20210506 22:06:36.986" level="FAIL">TimeoutError: page.goto: Timeout 10000ms exceeded.
=========================== logs ===========================
navigating to "http://parodifood.qaninja.academy/", waiting until "load"
============================================================
Note: use DEBUG=pw:api environment variable to capture Playwright logs.</msg>
<status status="FAIL" starttime="20210506 22:06:25.436" endtime="20210506 22:06:36.986"/>
</kw>
<kw name="Set Viewport Size" library="Browser">
<arg>1920</arg>
<arg>1080</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Sets current Pages viewport size to specified dimensions.</doc>
<status status="NOT RUN" starttime="20210506 22:06:36.986" endtime="20210506 22:06:36.996"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>css=span</arg>
<arg>contains</arg>
<arg>Nunca foi tão engraçado pedir comida</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="NOT RUN" starttime="20210506 22:06:36.996" endtime="20210506 22:06:36.996"/>
</kw>
<status status="FAIL" starttime="20210506 22:06:12.445" endtime="20210506 22:06:36.996"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210506 22:06:37.001" level="WARN">Keyword 'Take Screenshot' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20210506 22:06:37.006" level="FAIL">Error: Tried to take screenshot, but no page was open.</msg>
<status status="FAIL" starttime="20210506 22:06:36.996" endtime="20210506 22:06:37.006">Error: Tried to take screenshot, but no page was open.</status>
</kw>
<status status="FAIL" starttime="20210506 22:06:12.441" endtime="20210506 22:06:37.006">Setup failed:
TimeoutError: page.goto: Timeout 10000ms exceeded.
=========================== logs ===========================
navigating to "http://parodifood.qaninja.academy/", waiting until "load"
============================================================
Note: use DEBUG=pw:api environment variable to capture Playwright logs.

Also teardown failed:
Error: Tried to take screenshot, but no page was open.</status>
</test>
<status status="FAIL" starttime="20210506 22:06:12.421" endtime="20210506 22:06:37.086"/>
</suite>
<status status="FAIL" starttime="20210506 22:04:40.205" endtime="20210506 22:06:37.096"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">temp</stat>
</tag>
<suite>
<stat pass="4" fail="2" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Busca">Tests.Busca</stat>
<stat pass="1" fail="1" skip="0" id="s1-s2" name="Carrinho">Tests.Carrinho</stat>
<stat pass="0" fail="1" skip="0" id="s1-s3" name="Pedido">Tests.Pedido</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20210506 22:06:12.316" level="WARN">Keyword 'Take Screenshot' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20210506 22:06:12.341" level="WARN">Keyword 'Take Screenshot' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20210506 22:06:36.986" level="WARN">Keyword 'Take Screenshot' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
<msg timestamp="20210506 22:06:37.001" level="WARN">Keyword 'Take Screenshot' could not be run on failure:
Error: Tried to take screenshot, but no page was open.</msg>
</errors>
</robot>
